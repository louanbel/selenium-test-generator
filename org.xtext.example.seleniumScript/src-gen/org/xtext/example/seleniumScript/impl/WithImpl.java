/**
 * generated by Xtext 2.36.0
 */
package org.xtext.example.seleniumScript.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.seleniumScript.SeleniumScriptPackage;
import org.xtext.example.seleniumScript.Value;
import org.xtext.example.seleniumScript.With;
import org.xtext.example.seleniumScript.WithAttribute;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>With</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.seleniumScript.impl.WithImpl#getWithAttribute <em>With Attribute</em>}</li>
 *   <li>{@link org.xtext.example.seleniumScript.impl.WithImpl#getValue <em>Value</em>}</li>
 * </ul>
 *
 * @generated
 */
public class WithImpl extends MinimalEObjectImpl.Container implements With
{
  /**
   * The cached value of the '{@link #getWithAttribute() <em>With Attribute</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWithAttribute()
   * @generated
   * @ordered
   */
  protected WithAttribute withAttribute;

  /**
   * The cached value of the '{@link #getValue() <em>Value</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected Value value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected WithImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SeleniumScriptPackage.Literals.WITH;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WithAttribute getWithAttribute()
  {
    return withAttribute;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetWithAttribute(WithAttribute newWithAttribute, NotificationChain msgs)
  {
    WithAttribute oldWithAttribute = withAttribute;
    withAttribute = newWithAttribute;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SeleniumScriptPackage.WITH__WITH_ATTRIBUTE, oldWithAttribute, newWithAttribute);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setWithAttribute(WithAttribute newWithAttribute)
  {
    if (newWithAttribute != withAttribute)
    {
      NotificationChain msgs = null;
      if (withAttribute != null)
        msgs = ((InternalEObject)withAttribute).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SeleniumScriptPackage.WITH__WITH_ATTRIBUTE, null, msgs);
      if (newWithAttribute != null)
        msgs = ((InternalEObject)newWithAttribute).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SeleniumScriptPackage.WITH__WITH_ATTRIBUTE, null, msgs);
      msgs = basicSetWithAttribute(newWithAttribute, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SeleniumScriptPackage.WITH__WITH_ATTRIBUTE, newWithAttribute, newWithAttribute));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Value getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetValue(Value newValue, NotificationChain msgs)
  {
    Value oldValue = value;
    value = newValue;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SeleniumScriptPackage.WITH__VALUE, oldValue, newValue);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setValue(Value newValue)
  {
    if (newValue != value)
    {
      NotificationChain msgs = null;
      if (value != null)
        msgs = ((InternalEObject)value).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SeleniumScriptPackage.WITH__VALUE, null, msgs);
      if (newValue != null)
        msgs = ((InternalEObject)newValue).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SeleniumScriptPackage.WITH__VALUE, null, msgs);
      msgs = basicSetValue(newValue, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SeleniumScriptPackage.WITH__VALUE, newValue, newValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SeleniumScriptPackage.WITH__WITH_ATTRIBUTE:
        return basicSetWithAttribute(null, msgs);
      case SeleniumScriptPackage.WITH__VALUE:
        return basicSetValue(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SeleniumScriptPackage.WITH__WITH_ATTRIBUTE:
        return getWithAttribute();
      case SeleniumScriptPackage.WITH__VALUE:
        return getValue();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SeleniumScriptPackage.WITH__WITH_ATTRIBUTE:
        setWithAttribute((WithAttribute)newValue);
        return;
      case SeleniumScriptPackage.WITH__VALUE:
        setValue((Value)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SeleniumScriptPackage.WITH__WITH_ATTRIBUTE:
        setWithAttribute((WithAttribute)null);
        return;
      case SeleniumScriptPackage.WITH__VALUE:
        setValue((Value)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SeleniumScriptPackage.WITH__WITH_ATTRIBUTE:
        return withAttribute != null;
      case SeleniumScriptPackage.WITH__VALUE:
        return value != null;
    }
    return super.eIsSet(featureID);
  }

} //WithImpl
